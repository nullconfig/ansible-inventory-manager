FROM node:18-alpine as builder

WORKDIR /app

# Copy package.json and install dependencies first (for better caching)
COPY package.json ./
RUN npm install

# Copy the rest of the application
COPY . .

# Build argument for environment (default to production)
ARG ENVIRONMENT=production
ENV ENVIRONMENT=${ENVIRONMENT}

# For backward compatibility - if build.js exists, use it, otherwise use webpack
RUN if [ -f "build.js" ]; then \
      echo "Using build.js script for building..." && \
      node build.js ${ENVIRONMENT} ./dist; \
    else \
      echo "Using webpack for building..." && \
      npm run build; \
    fi

# Use Nginx to serve the static files
FROM nginx:alpine

# Copy the built files from the builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s CMD wget --quiet --tries=1 --spider http://localhost/ || exit 1

# Default command
CMD ["nginx", "-g", "daemon off;"]